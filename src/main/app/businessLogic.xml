<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd"
	version="EE-3.5.0">
    
    <batch:job name="fromAToBBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <enricher source="#[payload]" target="#[flowVars['integrationUser']]" doc:name="enrich message with integration user Id">
	            <sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM User WHERE Username = '${sfdc.b.username}'" doc:name="query integration user Id based on its Email from Salesforce B instance" />
            </enricher>
        </batch:input>
        <batch:process-records>
            <batch:step name="forEachContactInAGetContactInBStep">
                <batch:set-record-variable variableName="contactInSourceInstance" value="#[payload]" doc:name="create contactInSourceInstance"/>
                <enricher source="#[payload]" target="#[recordVars['contactInTargetInstance']]" doc:name="store result in record var 'contactInTargetInstance'">
	                <sfdc:query-single config-ref="SalesforceB" query="SELECT Id, FirstName, LastName, Email, LastModifiedDate FROM Contact WHERE (Email LIKE '#[payload['Email']]')" doc:name="query contact from Salesforce B instance"/>
                </enricher>
            </batch:step>
            <batch:step name="forEachContactThatShouldBeUpsertedInB" filter-expression="#[recordVars['contactInTargetInstance'] is org.mule.transport.NullPayload ? org.mule.transport.NullPayload : (recordVars['contactInTargetInstance'].get('LastModifiedDate') &gt;= recordVars['contactInSourceInstance'].get('LastModifiedDate')) || (flowVars['integrationUser'].get('Id') == recordVars['contactInSourceInstance'].get('LastModifiedById'))]">
                <choice doc:name="Choice">
                    <when expression="#[recordVars['contactInTargetInstance'] is org.mule.transport.NullPayload]">
                        <expression-component doc:name="prepare contact for creation"><![CDATA[
							recordVars['contactInSourceInstance'].remove('Id');
							recordVars['contactInSourceInstance'].remove('LastModifiedById');
							recordVars['contactInSourceInstance'].remove('LastModifiedDate')
						]]></expression-component>
                    </when>
                    <otherwise>
                        <expression-component doc:name="prepare the contact for update"><![CDATA[
							recordVars['contactInSourceInstance'].put('Id',recordVars['contactInTargetInstance'].get('Id'));
							recordVars['contactInSourceInstance'].remove('LastModifiedById');
							recordVars['contactInSourceInstance'].remove('LastModifiedDate')
						]]></expression-component>
                    </otherwise>
                </choice>
                <batch:commit size="200" doc:name="Batch Commit">
			        <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Contact" doc:name="upsert Contacts in Salesforce B instance">
			            <sfdc:objects ref="#[payload]"/>
			        </sfdc:upsert>
			        <logger message="Upsert Salesforce response: #[payload]" level="INFO" doc:name="log Salesforce response"/>
                </batch:commit>
            </batch:step>
        </batch:process-records>
    </batch:job>
    
    <batch:job name="fromBToABatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <enricher source="#[payload]" target="#[flowVars['integrationUser']]" doc:name="enrich message with integration user Id">
	            <sfdc:query-single config-ref="SalesforceA" query="SELECT Id FROM User WHERE Username = '${sfdc.a.username}'" doc:name="query integration user Id based on its Email from Salesforce A instance"/>
            </enricher>
        </batch:input>
        <batch:process-records>
            <batch:step name="forEachContactInBGetContactInAStep">
                <batch:set-record-variable variableName="contactInSourceInstance" value="#[payload]" doc:name="create contactInSourceInstance"/>
                <enricher source="#[payload]" target="#[recordVars['contactInTargetInstance']]" doc:name="store result in record var 'contactInTargetInstance'">
		            <sfdc:query-single config-ref="SalesforceA" query="SELECT Id, FirstName, LastName, Email, LastModifiedDate FROM Contact WHERE (Email LIKE '#[payload['Email']]')" doc:name="query contact from Salesforce A instance"/>
                </enricher>
            </batch:step>
            <batch:step name="forEachContactThatShouldBeUpsertedInA" filter-expression="#[recordVars['contactInTargetInstance'] is org.mule.transport.NullPayload ? org.mule.transport.NullPayload : (recordVars['contactInTargetInstance'].get('LastModifiedDate') &gt;= recordVars['contactInSourceInstance'].get('LastModifiedDate')) || (flowVars['integrationUser'].get('Id') == recordVars['contactInSourceInstance'].get('LastModifiedById'))]">
                <choice doc:name="Choice">
                    <when expression="#[recordVars['contactInTargetInstance'] is org.mule.transport.NullPayload]">
                        <expression-component doc:name="prepare contact for creation"><![CDATA[
							recordVars['contactInSourceInstance'].remove('Id');
							recordVars['contactInSourceInstance'].remove('LastModifiedById');
							recordVars['contactInSourceInstance'].remove('LastModifiedDate')
						]]></expression-component>
                    </when>
                    <otherwise>
                        <expression-component doc:name="prepare the contact for update"><![CDATA[
							recordVars['contactInSourceInstance'].put('Id',recordVars['contactInTargetInstance'].get('Id'));
							recordVars['contactInSourceInstance'].remove('LastModifiedById');
							recordVars['contactInSourceInstance'].remove('LastModifiedDate')
						]]></expression-component>
                    </otherwise>
                </choice>
                <batch:commit size="200" doc:name="Batch Commit">
			        <sfdc:upsert config-ref="SalesforceA" externalIdFieldName="Id" type="Contact" doc:name="upsert Contacts in Salesforce A instance">
			            <sfdc:objects ref="#[payload]"/>
			        </sfdc:upsert>
			        <logger message="Upsert Salesforce response: #[payload]" level="INFO" doc:name="log Salesforce response"/>
                </batch:commit>
            </batch:step>
        </batch:process-records>
    </batch:job>


</mule>
