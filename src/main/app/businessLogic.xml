<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd"
	version="EE-3.5.0">
    
    <batch:job name="syncBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="forEachContactInAGetContactInBStep">
                <batch:set-record-variable variableName="contactInSourceInstance" value="#[payload]" doc:name="store contact in source instance"/>
                <logger message="Hello Step 1 A! Contact name: #[recordVars['contactInSourceInstance']['FirstName']] #[recordVars['contactInSourceInstance']['LastName']]" level="INFO" doc:name="debug Logger"/>
                <enricher source="#[payload]" target="#[recordVars['contactInTargetInstance']]" doc:name="store contact in target instance">
	                <sfdc:query-single config-ref="SalesforceB" query="SELECT Id, FirstName, LastName, Email, LastModifiedDate FROM Contact WHERE (Email LIKE '#[payload['Email']]')" doc:name="query contact from B instance"/>
                </enricher>
            </batch:step>
            <batch:step name="findOrCreateAccountInBSetp" filter-expression="! ('syncAccount'=='${account.sync.policy}')">
                <logger message="Hello Step 2 A! Contact name: #[recordVars['contactInSourceInstance']['FirstName']] #[recordVars['contactInSourceInstance']['LastName']]" level="INFO" doc:name="debug Logger"/>
                <enricher source="#[payload]" target="#[recordVars['accountInB']]" doc:name="store account in B">
                    <sfdc:query-single config-ref="SalesforceB" query="SELECT Id, Name FROM Account WHERE Name = '#[recordVars['contactInSourceInstance']['Account']['Name']]'" doc:name="query Account in Salesforce Instance B"/>
                </enricher>
                <choice doc:name="Choice">
                    <when expression="#[recordVars['accountInB'] is NullPayload]">
	                    <expression-component doc:name="remove unnecessary fields"><![CDATA[recordVars['contactInSourceInstance']['Account'].remove('Id');
recordVars['contactInSourceInstance']['Account'].put('NumberOfEmployees', Integer.parseInt(recordVars['contactInSourceInstance']['Account']['NumberOfEmployees']));

message.payload = new java.util.ArrayList();
message.payload.add(recordVars['contactInSourceInstance']['Account']);]]></expression-component>
	                    <sfdc:create config-ref="SalesforceB" type="Account" doc:name="create Account in Salesforce Instance B">
	                        <sfdc:objects ref="#[payload]"/>
	                    </sfdc:create>
                        <set-payload value="#[payload[0].getId()]" doc:name="set payload with the new account's id"/>
                    </when>
                    <otherwise>
                        <set-payload value="#[recordVars['accountInB']['Id']]" doc:name="set payload with the existing account's id"/>
                    </otherwise>
                </choice>
                <expression-component doc:name="set contact's parente account id in B"><![CDATA[recordVars['contactInSourceInstance'].put('AccountId', payload);]]></expression-component>
            </batch:step>
            <batch:step name="setDummyAccountIdForBStep" filter-expression="! ('assignDummyAccount'=='${account.sync.policy}')">
                <logger message="Hello Step 3 A! Contact name: #[recordVars['contactInSourceInstance']['FirstName']] #[recordVars['contactInSourceInstance']['LastName']]" level="INFO" doc:name="debug Logger"/>
                <expression-component doc:name="set contact's parent account id in B"><![CDATA[recordVars['contactInSourceInstance'].put('AccountId', '${account.id.in.b}');]]></expression-component>
            </batch:step>
            <batch:step name="forEachContactThatShouldBeUpsertedInB" filter-expression="#[recordVars['contactInTargetInstance'] is NullPayload ? false : (recordVars['contactInTargetInstance'].get('LastModifiedDate') &gt;= recordVars['contactInSourceInstance'].get('LastModifiedDate')) || ('${sfdc.a.integration.user.id}' == recordVars['contactInSourceInstance'].get('LastModifiedById'))]">
				<expression-component doc:name="prepare contact for upsert"><![CDATA[recordVars['contactInSourceInstance'].remove('LastModifiedDate');
recordVars['contactInSourceInstance'].remove('LastModifiedById');
recordVars['contactInSourceInstance'].remove('Account');

if(recordVars['contactInTargetInstance'] is org.mule.transport.NullPayload) {
	recordVars['contactInSourceInstance'].remove('Id');
} else {
	recordVars['contactInSourceInstance'].put('Id',recordVars['contactInTargetInstance'].get('Id'));						
}
message.payload = recordVars['contactInSourceInstance'];]]></expression-component>
                <batch:commit size="200" doc:name="Batch Commit">
			        <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Contact" doc:name="upsert contacts in B">
			            <sfdc:objects ref="#[payload]"/>
			        </sfdc:upsert>
			        <logger message="Upsert Salesforce response: #[payload]" level="INFO" doc:name="log response"/>
                </batch:commit>
            </batch:step>
        </batch:process-records>
    </batch:job>
    
</mule>
